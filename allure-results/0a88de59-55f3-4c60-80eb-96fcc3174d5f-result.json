{"name":"To retrieve the details of the booking IDs","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Cannot parse object because no supported Content-Type was specified in response. Content-Type was 'text/plain; charset=utf-8'.","trace":"java.lang.IllegalStateException: Cannot parse object because no supported Content-Type was specified in response. Content-Type was 'text/plain; charset=utf-8'.\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)\n\tat io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:84)\n\tat io.restassured.internal.mapping.ObjectMapping$deserialize.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:220)\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:166)\n\tat Crud.getBookingIDs(Crud.java:128)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:661)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:744)\n\tat org.testng.TestRunner.run(TestRunner.java:602)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:380)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:289)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1226)\n\tat org.testng.TestNG.runSuites(TestNG.java:1144)\n\tat org.testng.TestNG.run(TestNG.java:1115)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\n"},"stage":"finished","steps":[{"name":"Starting the test to get booking details","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"message","value":"Starting the test to get booking details"}],"start":1729585023443,"stop":1729585023445},{"name":"Getting the response for the Booking IDs from test data excel","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"message","value":"Getting the response for the Booking IDs from test data excel"}],"start":1729585023446,"stop":1729585023447},{"name":"Asserting the response if the status code returned is 200","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"message","value":"Asserting the response if the status code returned is 200"}],"start":1729585028573,"stop":1729585028573},{"name":"Not Found","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"message","value":"Not Found"}],"start":1729585028682,"stop":1729585028682},{"name":"Asserting of response body with the data from test data excel","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"message","value":"Asserting of response body with the data from test data excel"}],"start":1729585028682,"stop":1729585028682}],"attachments":[],"parameters":[],"start":1729585023038,"stop":1729585028796,"uuid":"0a88de59-55f3-4c60-80eb-96fcc3174d5f","historyId":"9af535beca25a82095a8f1c2d7756b6d","fullName":"Crud.getBookingIDs","labels":[{"name":"package","value":"Crud"},{"name":"testClass","value":"Crud"},{"name":"testMethod","value":"getBookingIDs"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"rest-api-testing-using-RestAssured-master"},{"name":"subSuite","value":"Crud"},{"name":"host","value":"US-MYVPP93WYD"},{"name":"thread","value":"74731@US-MYVPP93WYD.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[]}